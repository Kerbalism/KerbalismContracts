CONTRACT_TYPE
{
  name = KerbalismContracts_TVSatelliteEquator
  agent = KerbalismSatco
  group = KerbalismSatco
  title = Equatorial TV Satellite
  description = Provide uninterrupted TV satellite coverage near the equator for one year
  synopsis = Have at least one working UHF TV transponder exactly over the given location without interruption.
  completedMessage = Well done, you've earned a reputation as a reliable provider!
  minExpiry = 600.0
  maxExpiry = 1200.0
  prestige = Trivial
  maxSimultaneous = 1
  rewardScience = 0
  rewardReputation = 1
  advanceFunds = 30000
  rewardFunds = 60000
  failureFunds = 15000
  failureReputation = 2
  targetBody = HomeWorld()

  REQUIREMENT
  {
    name = PartUnlocked
    type = PartUnlocked
    part = KerbalismContracts_uhfTransponder
  }

  REQUIREMENT
  {
    name = Orbit
    type = Orbit
  }

  BEHAVIOUR
  {
    name = WaypointGenerator
    type = WaypointGenerator

    RANDOM_WAYPOINT
    {
      waterAllowed = false
      icon = dish
      altitude = 0.0
      forceEquatorial = true
    }
  }

PARAMETER
{
  // The parameter name is not used, but should be provided to allow for
  // the possibility of other mods modifying contracts via ModuleManager.
  name = ProvideTvCoverage

  type = KerbalismContract

  // Optional, the title to display in the contract window
  title = This will be difficult

  // Required, name of the associated KerbalismContractRequirement configuration node
  id = TVServiceFixedAntenna

  // Required, the duration of this contract.
  duration = 1y

  // Optional, type of duration.
  // There are 2 types:
  // - countdown (default): will start the clock with duration as soon as all
  //   mission parameters are met. It will continue to count down during times when
  //   not all parameters are met (see allowedDowntime). When the clock reaches 0,
  //   the mission is a success.
  // - accumulating: will accumulate the total time during which mission parameters are met,
  //   but will stop the clock when not all parameters are met (see allowedDowntime).
  //   When the clock reaches 0, the mission is a success.
  durationType = countdown

  // Optional. Amount of time to wait after the contract was acepted before the
  // mission clock starts running. Intended for missions that require an immediate
  // response, like observations of wildfires and such.
  // If the parameters are not met by that time, the mission will reset (or fail,
  // depending on allowReset and allowedDowntime).
  // Default is no wait duration.
  waitDuration = 10m

  // Optional, index of the waypoint in the conract that is created by a WAYPOINT_GENERATOR
  // behaviour. Useful with contracts that have multiple waypoints.
  // Default is waypoint index 0.
  waypointIndex = 0

  // When false, the contracts window will show one status entry for each vessel that
  // is considered in the parameter evaluation. Can become quite verbose, thus not
  // recommended for missions that will likely see many satellites.
  // Default is false.
  hideChildren = False

  // Optional, default is true. When true, the mission timer will be reset to the
  // duration value when the mission parameters are not met. When false, the mission
  // will fail.
  allowReset = false

  // Optional, the amount of time allowed for mission parameters not to be met
  // before the mission timer is reset or the mission fails (see allowReset).
  allowedDowntime = 4h

  // Optional, minimum amount of vessels that need to meet all mission parameters.
  // Default value is 1.
  minVessels = 1
}
}

KerbalismContractRequirement
{
  name = EquatorialTVLocation
  title = Provide TV satellite service

  Requirement
  {
    name = EquipmentRunning
    equipmentId = uhfTransponder
    description = Have a running UHF TV Transponder
    shortDescription = UHF TV
  }

  Requirement
  {
    name = AboveWaypoint
    minElevation = 80.0
  }
}
